package {{package}};

import {{invokerPackage}}.ApiException;
import {{invokerPackage}}.ApiClient;
import {{invokerPackage}}.ApiResponse;
import {{invokerPackage}}.Configuration;
import {{modelPackage}}.*;
import {{invokerPackage}}.Pair;
import java.util.Arrays;
import java.util.List;

{{#imports}}import {{import}};
{{/imports}}

{{#operation}}
public class {{classname}} {
	{{#allParams}}
	private {{{dataType}}} {{paramName}}; {{#required}}//required{{/required}}
	public {{{dataType}}} get{{paramTitleName}}() {
		return this.{{paramName}};
	}
	public void set{{paramTitleName}}({{{dataType}}} {{paramName}}) {
		this.{{paramName}} = {{paramName}};
	}

	{{/allParams}}

	{{#requiredParams}}{{^secondaryParam}}
	public static Requires{{paramTitleName}}Builder builder() {
	    return new Requires{{paramTitleName}}Builder(new {{classname}}());
	}{{/secondaryParam}}

	public static class Requires{{paramTitleName}}Builder {
	    private final {{classname}} request;

	    private Requires{{paramTitleName}}Builder({{classname}} request) {
	        this.request = request;
	    }

	    public {{#nextParam}}Requires{{paramTitleName}}{{/nextParam}}Builder with{{paramTitleName}}({{{dataType}}} {{paramName}}) {
            request.set{{paramTitleName}}({{paramName}});
            return new {{#nextParam}}Requires{{paramTitleName}}{{/nextParam}}Builder(request);
        }
	}
	{{/requiredParams}}

	{{^requiredParams}}
	public static Builder builder() {
    	return new Builder(new {{classname}}());
    }
	{{/requiredParams}}

	public static class Builder {
		private final {{classname}} request;

		private Builder({{classname}} request) {
			this.request = request;
		}

		{{#allParams}}
		public Builder with{{paramTitleName}}({{{dataType}}} {{paramName}}) {
			request.set{{paramTitleName}}({{paramName}});
			return this;
		}
		{{/allParams}}

		public {{classname}} build() {
			return request;
		}
	}

	/*
	{{#requiredParams}}
	Requires{{paramTitleName}}Builder TO NEXT {{#nextParam}}Requires{{paramTitleName}}Builder{{/nextParam}}{{^nextParam}}Builder{{/nextParam}}
	{{/requiredParams}}
	*/
}
{{/operation}}